
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class SM_CreatePR extends javax.swing.JFrame {
    private User authenticatedUser;
    private DefaultTableModel tableModel;
    int [] rows;

    /**
     * Creates new form SM_CreatePR
     * @param authenticatedUser
     */
    public SM_CreatePR(User authenticatedUser) {
        setTitle("Create PR - SM");
        initComponents();
        this.authenticatedUser = authenticatedUser;
        setTable();
    }
    
    private void setTable(){
        tableModel = new DefaultTableModel();
        List <Item> items = Item.getLowItemList();
        String[] columnNames = {"Item ID", "Item Name", "Current Stock / Reorder Level", "Supplier", "Reorder Amount"};
        tableModel.setColumnIdentifiers(columnNames);
        
        for (Item item : items){
            String [] itemInfo = new String [5];
            Supplier itemSupplier = item.getSupplier();
            
            // Item info
            int itemQuantity = item.getQuantity(); 
            int reorderLevel = item.getReorderLevel();
            String stockStatus = "";
            if (itemQuantity < reorderLevel){
                // Insufficient
                stockStatus = "Insufficient";
            }else{
                stockStatus = "Sufficient";
            }
            itemInfo[0] = item.getItemId();
            itemInfo[1] = item.getItemName();
            itemInfo[2] = itemQuantity + " / " + reorderLevel + " (" + stockStatus + ")";
            itemInfo[3] = itemSupplier.toString();
            tableModel.addRow(itemInfo);
        }
        
        itemTable.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateTimePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        createPRBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dateTimePicker = new com.github.lgooddatepicker.components.DateTimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Below is the list of items below reorder level");

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itemTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);

        jLabel1.setText("Select one or more items and create PR");

        createPRBtn.setText("Create PR");
        createPRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPRBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");

        jLabel3.setText("Due Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(createPRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(128, 128, 128)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backBtn)
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createPRBtn)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseReleased
        // TODO add your handling code here:
        rows = itemTable.getSelectedRows();
    }//GEN-LAST:event_itemTableMouseReleased

    private void createPRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPRBtnActionPerformed
        // TODO add your handling code here:
        try{
            if (rows.length == 0){
                throw new Exception("Please select rows to create PR");
            }
            Item [] targetItems = new Item[rows.length];
            int count = 0;
            for(int row : rows){
                String itemId = itemTable.getValueAt(row, 0).toString();
                int reorderAmt = Integer.parseInt(itemTable.getValueAt(row, 4).toString());
                targetItems[count] = Item.getItemById(itemId);
                targetItems[count].setReorderAmt(reorderAmt);
                count++;
            }
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
            String dnt = String.valueOf(dateTimePicker.getDateTimePermissive().format(formatter)).replace(",", "");

            PR newPR = new PR(dnt);
            newPR.setUser(authenticatedUser);
            newPR.setItems(targetItems);
            String prId= newPR.createPR();
            if (prId == null){
                throw new Exception("Fail to create PR");
            }
            JOptionPane.showMessageDialog(this, "A new PR is created");
            itemTable.clearSelection();
        }catch(NullPointerException ne){
            JOptionPane.showMessageDialog(this, "Please enter reorder amount and select a due date", "Error", JOptionPane.ERROR_MESSAGE);
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e);
        }
    }//GEN-LAST:event_createPRBtnActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createPRBtn;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker1;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
